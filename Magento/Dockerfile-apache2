FROM ubuntu
ARG DEBIAN_FRONTEND=noninteractive
ENV PATH="/var/www/html/magento2/bin::$PATH"

#RUN set -x \
#    && apt-get update # && apt-get install -y --no-install-recommends ca-certificates gnupg wget \
#    && apt-key adv --fetch-keys https://artifacts.elastic.co/GPG-KEY-elasticsearch \
#    && echo "deb https://artifacts.elastic.co/packages/7.x/apt stable main" > /etc/apt/sources.list.d/elastic-7.x.list \
#    && cat /etc/apt/sources.list.d/elastic-7.x.list

RUN apt-get update && apt-get install -y systemctl tzdata libapache2-mod-security2 apt-utils \
                      apache2 libapache2-mod-wsgi python-dev mysql-server \
                      libapache2-mod-php php-dev php-curl php-zip php7.4-pdo php7.4-mysqlnd \
                      php7.4-opcache php7.4-xml php7.4-gd php7.4-mysql \
                      php7.4-intl php7.4-mbstring php7.4-bcmath php7.4-json \
                      php7.4-iconv php7.4-soap rabbitmq-server ca-certificates gnupg wget \
                      php-cli unzip curl

RUN a2enmod rewrite deflate expires headers rewrite ssl proxy_http

RUN wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add -
RUN echo "deb https://artifacts.elastic.co/packages/7.x/apt stable main" > /etc/apt/sources.list.d/elastic-7.x.list
RUN apt-get update && apt-get install -y elasticsearch

COPY docker-entrypoint.sh .
RUN chmod 777 docker-entrypoint.sh

# APACHE 2
#RUN apt-get install -y apache2 libapache2-mod-wsgi python-dev

RUN mv /etc/apache2/apache2.conf /etc/apache2/apache2.conf.original
COPY apache2/apache2.conf /etc/apache2/apache2.conf


# https://devdocs.magento.com/guides/v2.4/install-gde/prereq/apache.html
RUN mv /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/000-default.conf.original
COPY apache2/000-default.conf /etc/apache2/sites-available/000-default.conf

# SSL
RUN mkdir /etc/apache2/ssl
RUN openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/apache2/ssl/apache.key -out /etc/apache2/ssl/apache.crt -subj "/C=FR/ST=Ile De France/L=Paris/O=Adobe/OU=Partners/CN=dummy@adobe.com"
RUN a2ensite default-ssl.conf
COPY apache2/default-ssl.conf /etc/apache2/sites-available/default-ssl.conf

# MYSQL
#RUN apt-get -y install mysql-server
RUN usermod -d /var/lib/mysql/ mysql
RUN service mysql start \
  && mysql -u root  -e "CREATE DATABASE magento; \
  create user 'magento'@'localhost' IDENTIFIED BY 'magento'; \
  GRANT ALL ON magento.* TO 'magento'@'localhost'; \
  flush privileges;"

# PHP
#RUN apt-get install -y libapache2-mod-php php7.4-pdo php7.4-mysqlnd php7.4-opcache php7.4-xml php7.4-gd php7.4-mysql php7.4-intl php7.4-mbstring php7.4-bcmath php7.4-json php7.4-iconv php7.4-soap

# ELASTICSEARCH
RUN mkdir -p /usr/local/apache/password
# For cron
RUN htpasswd -b -c /usr/local/apache/password/.magento_pwd magento_user magento_pwd
# For ElasticSearch
RUN htpasswd -b -c /usr/local/apache/password/.elasticsearch_pwd elasticsearch_user elasticsearch_pwd

#RUN apt-get install -y gnupg wget
#RUN wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add -
#RUN echo "deb https://artifacts.elastic.co/packages/7.x/apt stable main" | tee -a /etc/apt/sources.list.d/elastic-7.x.list
#RUN apt-get update && apt-get install -y elasticsearch
RUN mkdir /var/run/elasticsearch \
    && chown -R elasticsearch:elasticsearch /var/run/elasticsearch \
    && systemctl enable elasticsearch.service
#RUN systemctl start elasticsearch.service
#RUN a2enmod proxy_http


# RabbitMQ
#RUN apt-get install -y

#RUN service apache2 restart

# Composer
RUN curl -sS https://getcomposer.org/installer -o composer-setup.php \
    && php composer-setup.php --install-dir=/usr/local/bin --filename=composer


# Magento
COPY auth.json /root/.composer/
RUN cd /var/www/html/ && mkdir magento2 \
    && composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition magento2 \
    && cd magento2 \
    && find var generated vendor pub/static pub/media app/etc -type f -exec chmod g+w {} + \
    && find var generated vendor pub/static pub/media app/etc -type d -exec chmod g+ws {} + \
    && chown -R :www-data . # Ubuntu \
    && chmod u+x bin/magento

RUN bin/magento setup:install \
    --base-url=http://localhost/magento2 \
    --db-host=localhost \
    --db-name=magento \
    --db-user=magento \
    --db-password=magento \
    --admin-firstname=admin \
    --admin-lastname=admin \
    --admin-email=admin@admin.com \
    --admin-user=admin \
    --admin-password=admin123 \
    --language=en_US \
    --currency=USD \
    --timezone=Europe/Paris \
    --use-rewrites=1


EXPOSE 80 8080 443 3306 9200
#CMD ["./docker-entrypoint.sh"]
#ENTRYPOINT ["/bin/bash -c ./docker-entrypoint.sh"]
